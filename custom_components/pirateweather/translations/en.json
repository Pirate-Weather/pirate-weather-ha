{
    "config": {
        "abort": {
            "already_configured": "Location is already configured"
        },
        "error": {
            "cannot_connect": "Failed to connect",
            "invalid_api_key": "Invalid API key"
        },
        "step": {
            "user": {
                "data": {
                    "api_key": "API Key",
                    "language": "Language",
                    "latitude": "Latitude",
                    "longitude": "Longitude",
                    "mode": "Forecast mode for the Weather entity",
                    "name": "Integration Name",
                    "units": "Units for sensors. Only used for if sensors are requested.",
                    "forecast": "Daily forecasts sensors in csv form from 0-7 (ex. '0,1,3'). Only used if sensors are requested.",
                    "hourly_forecast":  "Hourly forecast sensors in csv form from 0-168 (ex. '0,1,10'). Only used if sensors are requested.",
                    "monitored_conditions": "Monitored conditions to create sensors for. Only used if sensors are requested.",
                    "pw_platform": "Weather Entity and/or Sensor Entity. Sensor will create entities for each condition at each time. If unsure, only select Weather!",
                    "scan_interval": "Seconds to wait between updates. Reducing this below 900 seconds (15 minutes) is not recomended."                                         
                },
                "description": "Set up Pirate Weather integration. To generate API key go to https://pirateweather.net",
                "data_description": {
                  "forecast": "ex. '0,1,4' (without quotes)",
                  "hourly_forecast": "ex. '0,1,4' (without quotes)"
                }                
            }
        }
    },
    "options": {
        "step": {
            "init": {
                "data": {
                    "api_key": "API Key",
                    "language": "Language",
                    "latitude": "Latitude",
                    "longitude": "Longitude",
                    "mode": "Forecast mode for the Weather entity",
                    "name": "Integration Name",
                    "units": "Units for sensors. Only used for if sensors are requested.",
                    "forecast": "Daily forecasts sensors in csv form from 0-7 (ex. '0,1,3'). Only used if sensors are requested.\n NOTE: Removing sensors will produce orphaned entities that need to be deleted.",
                    "hourly_forecast":  "Hourly forecast sensors in csv form from 0-168 (ex. '0,1,10'). Only used if sensors are requested.\n NOTE: Removing sensors will produce orphaned entities that need to be deleted.",
                    "monitored_conditions": "Monitored conditions to create sensors for. Only used if sensors are requested.\n NOTE: Removing sensors will produce orphaned entities that need to be deleted.",
                    "pw_platform": "Weather Entity and/or Sensor Entity. Sensor will create entities for each condition at each time. If unsure, only select Weather!",
                    "pw_round": "Round values to the nearest integer. Ensure that the selected units match the system units."
                },
                "description": "Set up Pirate Weather integration. To generate API key go to https://pirateweather.net",
                "data_description": {
                  "forecast": "ex. '0,1,4'.\n To remove existing sensors, type 'None' (without quotes).",
                  "hourly_forecast": "ex. '0,1,4'.\n To remove existing sensors, type 'None' (without quotes)."
                }         
            }
        }
    }
}
